/*
문제 : 자연수 n과 m이 주어졌을 때, 아래 조건을 만족하는 길이가 m인 수열을 모두 구하는 프로그램을 작성하시오.
 1. 1부터 n까지 자연수 중에서 m개를 고른 수열
 2. 같은 수를 여러 번 골라도 된다.
 3. 고른 수열은 비내림차순이어야 한다.
    -> 길이가 k인 수열 A가 A1 ≤ A2 ≤ ... ≤ AK-1 ≤ AK를 만족하면, 비내림차순이라고 한다.
----------------------------------------------------------------------------------------------------------------
입력 : 첫째 줄에 자연수 n과 m이 주어진다. (1 <= M <= N <= 8)
출력 : 한 줄에 하나씩 문제의 조건을 만족하는 수열을 출력한다. 중복되는 수열을 여러 번 출력하면 아된며, 각 수열은 공백으로 구분해서 출력해야 한다.
 수열은 사전 순으로 증가하는 순서로 출력해야 한다.
----------------------------------------------------------------------------------------------------------------
풀이 : 백트래킹 완전 탐색을 이용하여 문제에서 제시한 모든 수열을 방문하여 출력한다. 여기서 주의해야 할 점은 "비내림차순"이기에 수열의 앞 부분에 원소 보다는 값이 크다는 점이다. 먼저 방문 표시는 불필요하다. 방문 표시를 사용하여 백 트래킹을 진행할 경우 중복된 숫자를 수열로 출력할 수 없기에 방문 표시를 하는 visted 사용하지 않고, func의 파라미터에서 start를 추가하여 반복의 시작점을 임의로 조정하여 수열을 만들 수 있다는 생각을 가지고 구현을 풀어 보았다.
*/

#include <iostream>
#define MAX 10

using namespace std;

int n, m;
int arr[MAX];

void func(int k, int start)
{
    if (m == k)
    {
        for (int i = 0; i < m; i++)
            cout << arr[i] << ' ';
        cout << '\n';
        
        return;
    }
    
    for (int i = start; i <= n; i++)
    {
        arr[k] = i;
        func(k + 1, i);
    }
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    
    cin >> n >> m;
    func(0, 1);
    
    return 0;
}
